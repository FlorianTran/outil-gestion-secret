services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev # Étape de développement
    container_name: backend
    ports:
      - "3000:3000" # Backend sur le port 3000
    volumes:
      - ./backend:/app # Synchronisation des fichiers locaux
      - /app/node_modules # Préserver les node_modules dans le conteneur
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: secrets
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev # Utiliser l'étape dev pour le frontend
    container_name: frontend
    ports:
      - "3001:3001" # Frontend sur le port 3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3001
    depends_on:
      - backend

  postgres:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: secrets
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
